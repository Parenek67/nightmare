version: '3.9'

services:
  auth:
    build: ./auth_service
    ports:
      - "8000:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/__health"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 5s  

  weather:
    build: ./weather_service
    ports:
      - "8001:80"

  krakend_ce:
    image: devopsfaith/krakend:watch
    volumes:
      - ./config/krakend:/etc/krakend
    ports:
      - "8080:8080"
    command: ["run", "-d", "-c", "/etc/krakend/krakend.json"]
    depends_on:
      - auth
      - weather    

  db:
    image: postgres:14.0
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: klim
      POSTGRES_PASSWORD: password123
      POSTGRES_DB: users_db
    ports:
      - "5432:5432"

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp"
      - "16686:16686"
    #networks:
     # - jaeger-example

  prometheus:
    image: prom/prometheus
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana-oss
    ports:
      - 3000:3000
    restart: unless-stopped
    volumes:
      - ./config/grafana/datasources:/etc/grafana/provisioning/datasources  

volumes:
  postgres_data:  